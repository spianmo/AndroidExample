// Generated by view binder compiler. Do not edit!
package com.kirito666.room.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import com.kirito666.room.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout changeCourseCardUi;

  @NonNull
  public final TextView changeCourseCardUiSubtitle;

  @NonNull
  public final TextView changeCourseCardUiTitle;

  @NonNull
  public final Guideline guideline21;

  @NonNull
  public final Guideline guideline22;

  @NonNull
  public final Guideline guideline23;

  @NonNull
  public final Guideline guideline24;

  @NonNull
  public final TextView paletteColor;

  @NonNull
  public final ImageView scheduleCourseItemHeightIcon;

  @NonNull
  public final ConstraintLayout scheduleCourseItemHeightItem;

  @NonNull
  public final TextView scheduleCourseItemHeightSubtitle;

  @NonNull
  public final TextView scheduleCourseItemHeightTitle;

  @NonNull
  public final ConstraintLayout scheduleCourseMarginItem;

  @NonNull
  public final TextView scheduleCourseMarginSubtitle;

  @NonNull
  public final TextView scheduleCourseMarginTitle;

  @NonNull
  public final ConstraintLayout scheduleIsNotCurWeek;

  @NonNull
  public final TextView scheduleIsNotCurWeekSubTitle;

  @NonNull
  public final TextView scheduleIsNotCurWeekTitle;

  @NonNull
  public final ImageView scheduleMaxSessionIcon;

  @NonNull
  public final ConstraintLayout schedulePaletteItem;

  @NonNull
  public final TextView showSliderSubTitle;

  @NonNull
  public final Switch switchIsNotCurWeek;

  @NonNull
  public final Switch switchIsShowSlider;

  @NonNull
  public final TextView textView17;

  @NonNull
  public final TextView versionSlogan;

  private ActivitySettingBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout changeCourseCardUi, @NonNull TextView changeCourseCardUiSubtitle,
      @NonNull TextView changeCourseCardUiTitle, @NonNull Guideline guideline21,
      @NonNull Guideline guideline22, @NonNull Guideline guideline23,
      @NonNull Guideline guideline24, @NonNull TextView paletteColor,
      @NonNull ImageView scheduleCourseItemHeightIcon,
      @NonNull ConstraintLayout scheduleCourseItemHeightItem,
      @NonNull TextView scheduleCourseItemHeightSubtitle,
      @NonNull TextView scheduleCourseItemHeightTitle,
      @NonNull ConstraintLayout scheduleCourseMarginItem,
      @NonNull TextView scheduleCourseMarginSubtitle, @NonNull TextView scheduleCourseMarginTitle,
      @NonNull ConstraintLayout scheduleIsNotCurWeek,
      @NonNull TextView scheduleIsNotCurWeekSubTitle, @NonNull TextView scheduleIsNotCurWeekTitle,
      @NonNull ImageView scheduleMaxSessionIcon, @NonNull ConstraintLayout schedulePaletteItem,
      @NonNull TextView showSliderSubTitle, @NonNull Switch switchIsNotCurWeek,
      @NonNull Switch switchIsShowSlider, @NonNull TextView textView17,
      @NonNull TextView versionSlogan) {
    this.rootView = rootView;
    this.changeCourseCardUi = changeCourseCardUi;
    this.changeCourseCardUiSubtitle = changeCourseCardUiSubtitle;
    this.changeCourseCardUiTitle = changeCourseCardUiTitle;
    this.guideline21 = guideline21;
    this.guideline22 = guideline22;
    this.guideline23 = guideline23;
    this.guideline24 = guideline24;
    this.paletteColor = paletteColor;
    this.scheduleCourseItemHeightIcon = scheduleCourseItemHeightIcon;
    this.scheduleCourseItemHeightItem = scheduleCourseItemHeightItem;
    this.scheduleCourseItemHeightSubtitle = scheduleCourseItemHeightSubtitle;
    this.scheduleCourseItemHeightTitle = scheduleCourseItemHeightTitle;
    this.scheduleCourseMarginItem = scheduleCourseMarginItem;
    this.scheduleCourseMarginSubtitle = scheduleCourseMarginSubtitle;
    this.scheduleCourseMarginTitle = scheduleCourseMarginTitle;
    this.scheduleIsNotCurWeek = scheduleIsNotCurWeek;
    this.scheduleIsNotCurWeekSubTitle = scheduleIsNotCurWeekSubTitle;
    this.scheduleIsNotCurWeekTitle = scheduleIsNotCurWeekTitle;
    this.scheduleMaxSessionIcon = scheduleMaxSessionIcon;
    this.schedulePaletteItem = schedulePaletteItem;
    this.showSliderSubTitle = showSliderSubTitle;
    this.switchIsNotCurWeek = switchIsNotCurWeek;
    this.switchIsShowSlider = switchIsShowSlider;
    this.textView17 = textView17;
    this.versionSlogan = versionSlogan;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_setting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.changeCourseCardUi;
      ConstraintLayout changeCourseCardUi = rootView.findViewById(id);
      if (changeCourseCardUi == null) {
        break missingId;
      }

      id = R.id.change_course_card_ui_subtitle;
      TextView changeCourseCardUiSubtitle = rootView.findViewById(id);
      if (changeCourseCardUiSubtitle == null) {
        break missingId;
      }

      id = R.id.change_course_card_ui_title;
      TextView changeCourseCardUiTitle = rootView.findViewById(id);
      if (changeCourseCardUiTitle == null) {
        break missingId;
      }

      id = R.id.guideline21;
      Guideline guideline21 = rootView.findViewById(id);
      if (guideline21 == null) {
        break missingId;
      }

      id = R.id.guideline22;
      Guideline guideline22 = rootView.findViewById(id);
      if (guideline22 == null) {
        break missingId;
      }

      id = R.id.guideline23;
      Guideline guideline23 = rootView.findViewById(id);
      if (guideline23 == null) {
        break missingId;
      }

      id = R.id.guideline24;
      Guideline guideline24 = rootView.findViewById(id);
      if (guideline24 == null) {
        break missingId;
      }

      id = R.id.paletteColor;
      TextView paletteColor = rootView.findViewById(id);
      if (paletteColor == null) {
        break missingId;
      }

      id = R.id.scheduleCourseItemHeightIcon;
      ImageView scheduleCourseItemHeightIcon = rootView.findViewById(id);
      if (scheduleCourseItemHeightIcon == null) {
        break missingId;
      }

      id = R.id.scheduleCourseItemHeightItem;
      ConstraintLayout scheduleCourseItemHeightItem = rootView.findViewById(id);
      if (scheduleCourseItemHeightItem == null) {
        break missingId;
      }

      id = R.id.scheduleCourseItemHeightSubtitle;
      TextView scheduleCourseItemHeightSubtitle = rootView.findViewById(id);
      if (scheduleCourseItemHeightSubtitle == null) {
        break missingId;
      }

      id = R.id.scheduleCourseItemHeightTitle;
      TextView scheduleCourseItemHeightTitle = rootView.findViewById(id);
      if (scheduleCourseItemHeightTitle == null) {
        break missingId;
      }

      id = R.id.scheduleCourseMarginItem;
      ConstraintLayout scheduleCourseMarginItem = rootView.findViewById(id);
      if (scheduleCourseMarginItem == null) {
        break missingId;
      }

      id = R.id.scheduleCourseMarginSubtitle;
      TextView scheduleCourseMarginSubtitle = rootView.findViewById(id);
      if (scheduleCourseMarginSubtitle == null) {
        break missingId;
      }

      id = R.id.scheduleCourseMarginTitle;
      TextView scheduleCourseMarginTitle = rootView.findViewById(id);
      if (scheduleCourseMarginTitle == null) {
        break missingId;
      }

      id = R.id.scheduleIsNotCurWeek;
      ConstraintLayout scheduleIsNotCurWeek = rootView.findViewById(id);
      if (scheduleIsNotCurWeek == null) {
        break missingId;
      }

      id = R.id.scheduleIsNotCurWeekSubTitle;
      TextView scheduleIsNotCurWeekSubTitle = rootView.findViewById(id);
      if (scheduleIsNotCurWeekSubTitle == null) {
        break missingId;
      }

      id = R.id.scheduleIsNotCurWeekTitle;
      TextView scheduleIsNotCurWeekTitle = rootView.findViewById(id);
      if (scheduleIsNotCurWeekTitle == null) {
        break missingId;
      }

      id = R.id.scheduleMaxSessionIcon;
      ImageView scheduleMaxSessionIcon = rootView.findViewById(id);
      if (scheduleMaxSessionIcon == null) {
        break missingId;
      }

      id = R.id.schedulePaletteItem;
      ConstraintLayout schedulePaletteItem = rootView.findViewById(id);
      if (schedulePaletteItem == null) {
        break missingId;
      }

      id = R.id.showSliderSubTitle;
      TextView showSliderSubTitle = rootView.findViewById(id);
      if (showSliderSubTitle == null) {
        break missingId;
      }

      id = R.id.switchIsNotCurWeek;
      Switch switchIsNotCurWeek = rootView.findViewById(id);
      if (switchIsNotCurWeek == null) {
        break missingId;
      }

      id = R.id.switchIsShowSlider;
      Switch switchIsShowSlider = rootView.findViewById(id);
      if (switchIsShowSlider == null) {
        break missingId;
      }

      id = R.id.textView17;
      TextView textView17 = rootView.findViewById(id);
      if (textView17 == null) {
        break missingId;
      }

      id = R.id.versionSlogan;
      TextView versionSlogan = rootView.findViewById(id);
      if (versionSlogan == null) {
        break missingId;
      }

      return new ActivitySettingBinding((ConstraintLayout) rootView, changeCourseCardUi,
          changeCourseCardUiSubtitle, changeCourseCardUiTitle, guideline21, guideline22,
          guideline23, guideline24, paletteColor, scheduleCourseItemHeightIcon,
          scheduleCourseItemHeightItem, scheduleCourseItemHeightSubtitle,
          scheduleCourseItemHeightTitle, scheduleCourseMarginItem, scheduleCourseMarginSubtitle,
          scheduleCourseMarginTitle, scheduleIsNotCurWeek, scheduleIsNotCurWeekSubTitle,
          scheduleIsNotCurWeekTitle, scheduleMaxSessionIcon, schedulePaletteItem,
          showSliderSubTitle, switchIsNotCurWeek, switchIsShowSlider, textView17, versionSlogan);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
